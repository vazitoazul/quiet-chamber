#!/usr/bin/env node
var url = require('url');
var path= require('path'),
    async = require('async'),
    ObjectId = require('mongodb').ObjectID;
var Logger = require('le_node');
var crypto    = require('crypto');
require('date-utils')
process.chdir(path.resolve(__dirname,'../'));
const config = {
  user: {
    email : 'jfrosero@rosero.in',
    firstName : 'Juan',
    lastName : 'Rosero'
    defaultRecommender: true,
  },
  passport: {
    protocol    : 'local',
    password    : 'Dinabun2019',
    user        : null,
    accessToken : crypto.randomBytes(48).toString('base64'),
  }
};
var subsValue;
(function() {
  var sails;
  try {
    sails = require('sails');
  } catch (e) {
    console.error('To run an app using `node app.js`, you usually need to have a version of `sails` installed in the same directory as your app.');
    console.error('To do that, run `npm install sails`');
    console.error('');
    console.error('Alternatively, if you have sails installed globally (i.e. you did `npm install -g sails`), you can use `sails lift`.');
    console.error('When you run `sails lift`, your app will still use a local `./node_modules/sails` dependency if it exists,');
    console.error('but if it doesn\'t, the app will run with the global sails instead!');
    return;
  }

  // Try to get `rc` dependency
  var rc;
  try {
    rc = require('rc');
  } catch (e0) {
    try {
      rc = require('sails/node_modules/rc');
    } catch (e1) {
      console.error('Could not find dependency: `rc`.');
      console.error('Your `.sailsrc` file(s) will be ignored.');
      console.error('To resolve this, run:');
      console.error('npm install rc --save');
      rc = function () { return {}; };
    }
  }
  // Start server
  sails.lift(rc('sails'),function(done){
    var logger = new Logger({
      token:sails.config.keys.scheduledLogEntriesKey
    });
    //Find all the users that have suscriptions about to end
    User.create(config.user, (err, newUser) => {
      Passport.create({...config.passport, user: newUser.id}, (err, newPass) => {
        console.log(newUser, newPass);
        process.exit();
      });
    });

  });
})();
